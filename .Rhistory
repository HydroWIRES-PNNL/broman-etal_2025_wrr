round(range(test2$pers_diff_pct) * 100, 2)
test3 = test %>% filter(quantile >= 0.9)
test3
quantile(test3$pers_diff_pct, 0.25)
quantile(test3$pers_diff_pct *100, 0.25)
quantile(test3$pers_diff_pct *100, 0.75)
quantile(test3$pers_diff_pct *100, 0.9)
quantile(test3$pers_diff_pct *100, 0.1)
range(test3$pers_diff_pct *100)
#===========================================================
# Name: f2_plot_hydropower_facility_map.R
# Author: D. Broman, PNNL
# Last Modified: 2022-10-07
# Description: [D3] Figure 2: hydropower facility map
#===========================================================
library(tidyverse)
library(lubridate)
library(RColorBrewer)
library(scales)
library(gridExtra)
library(extrafont)
library(usmap)
library(sf)
extrafont::loadfonts()
# read in EHA
eha2021_tbl = read_csv('data/input_data/hydrosource/HydroSource_HYC.csv')
eha2021_jn = eha2021_tbl %>%
dplyr::select(EIA_ID, plant, CH_MW, lon, lat)
# table of facilities used in experiment
target_tbl = read_csv('data/input_data/starfit_reservoirtargets/2000_2019_weekly_GOWEST_hydro_inputs_with_release_mult_and_storage_tuewk_updateror.csv')
target_meta = target_tbl %>%
dplyr::select(EIA_ID, type) %>%
distinct()
# hydropower facilities used in experiment
facility_set = eha2021_jn %>%
left_join(target_meta) %>%
dplyr::filter(!is.na(type))
# hydropower facilities not used in experiment
facility_set_other = eha2021_tbl %>%
dplyr::filter(state %in% c('WA', 'OR', 'CA', 'AZ', 'NV', 'ID', 'MT', 'WY',
'UT', 'NM', 'CO')) %>%
dplyr::select(EIA_ID, plant, CH_MW, lon, lat) %>%
dplyr::filter(!EIA_ID %in% target_meta$EIA_ID)
# type labels
type_tbl = tibble(type = c('STARFIT', 'RoR/small storage'),
Type = c('Storage', 'Run-of-River'))
facility_set = facility_set %>%
left_join(type_tbl) %>%
dplyr::rename(`Nameplate Capacity (MW)` = CH_MW)
# spatial layers
states_sf = st_read('data/spatial/wecc_boundary_states.gpkg')
wecc_sf = st_read('data/spatial/wecc_boundary.gpkg')
# hydropower facility map
ggplot() +
with_shadow(geom_sf(data = wecc_shp, fill = '#ece6d9', color = NA), colour = '#cccccc') +
geom_sf(data = states_sf, fill = NA, color = '#f4f4f2', linewidth = 0.2) +
geom_point(data = facility_set_other, aes(x = lon, y = lat), shape = 16, size = 0.5, color = 'gray30', alpha = 0.5) +
geom_point(data = facility_set, aes(x = lon, y = lat, size = `Nameplate Capacity (MW)`, fill = Type),
shape = 21, alpha = 0.6) +
scale_fill_manual(values = c('#24833c', '#815417')) +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
legend.box = 'horizontal',
) +
guides(fill = guide_legend(title.position = 'top', title.hjust = 0.5),
size = guide_legend(title.position = 'top', title.hjust = 0.5)
) +
ggtitle('Western Interconnect Conventional Hydropower Facilities')
# hydropower facility map
ggplot() +
with_shadow(geom_sf(data = wecc_sf, fill = '#ece6d9', color = NA), colour = '#cccccc') +
geom_sf(data = states_sf, fill = NA, color = '#f4f4f2', linewidth = 0.2) +
geom_point(data = facility_set_other, aes(x = lon, y = lat), shape = 16, size = 0.5, color = 'gray30', alpha = 0.5) +
geom_point(data = facility_set, aes(x = lon, y = lat, size = `Nameplate Capacity (MW)`, fill = Type),
shape = 21, alpha = 0.6) +
scale_fill_manual(values = c('#24833c', '#815417')) +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
legend.box = 'horizontal',
) +
guides(fill = guide_legend(title.position = 'top', title.hjust = 0.5),
size = guide_legend(title.position = 'top', title.hjust = 0.5)
) +
ggtitle('Western Interconnection Conventional Hydropower Facilities')
ggsave('figures/figure2_hydropowerfacilitymap.png', height = 8, width = 6)
# hydropower facility map
ggplot() +
with_shadow(geom_sf(data = wecc_sf, fill = '#ece6d9', color = NA), colour = '#cccccc') +
geom_sf(data = states_sf, fill = NA, color = '#f4f4f2', linewidth = 0.2) +
geom_point(data = facility_set_other, aes(x = lon, y = lat), shape = 16, size = 0.5, color = 'gray30', alpha = 0.5) +
geom_point(data = facility_set, aes(x = lon, y = lat, size = `Nameplate Capacity (MW)`, fill = Type),
shape = 21, alpha = 0.6) +
scale_fill_manual(values = c('#24833c', '#815417')) +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
legend.box = 'horizontal',
) +
guides(fill = guide_legend(title.position = 'top', title.hjust = 0.5),
size = guide_legend(title.position = 'top', title.hjust = 0.5)
) # +
ggsave('figures/figure2_hydropowerfacilitymap.png', height = 8, width = 6)
dp_dat_stat
test = dp_dat_stat %>%
mutate(year = year(week_commencing), month = month(week_commencing))
test
test2 = test %>%
group_by(EIA_ID, forecast, year, month) %>%
dplyr::summarise(benefit_revenue = sum(benefit_revenue))
test2
# pull out perfect forecast as comparison
test3 = test2 %>%
dplyr::filter(forecast == 'perfect') %>%
dplyr::rename(revenue_perfect = benefit_revenue) %>%
dplyr::select(-forecast)
# pull out perfect forecast as comparison
test3 = test2 %>%
ungroup() %>%
dplyr::filter(forecast == 'perfect') %>%
dplyr::rename(revenue_perfect = benefit_revenue) %>%
dplyr::select(-forecast)
test3
test4 = test2 %>%
left_join(test3)
test4
test4 = test2 %>%
left_join(test3) %>%
mutate(revenue_pct_diff = (revenue_perfect - benefit_revenue) / revenue_perfect)
test4
test4 %>% dplyr::filter(revenue_pct_diff > 0.1)
test5 = test4 %>%
dplyr::filter(revenue_pct_diff > 0.1)
test5
unique(test5$EIA_ID)
hydro_node_tbl
bus_label_tbl
go_nodes_100_hydro_tbl
hydro_node_tbl
go_nodes_100_hydro_tbl
hydro_plant_tbl_fl
test
# add year and month columns
test = dp_dat_stat %>%
mutate(year = year(week_commencing), month = month(week_commencing)) %>%
dplyr::rename(eia_plant_id = EIA_ID)
# add year and month columns
test = dp_dat_stat %>%
mutate(year = year(week_commencing), month = month(week_commencing)) %>%
dplyr::rename(eia_plant_id = EIA_ID) %>%
left_join(hydro_plant_tbl_fl)
test
test2 = test %>%
group_by(Bus, eia_plant_id, forecast, year, month) %>%
dplyr::summarise(benefit_revenue = sum(benefit_revenue))
# pull out perfect forecast as comparison
test3 = test2 %>%
ungroup() %>%
dplyr::filter(forecast == 'perfect') %>%
dplyr::rename(revenue_perfect = benefit_revenue) %>%
dplyr::select(-forecast)
test4 = test2 %>%
left_join(test3) %>%
mutate(revenue_pct_diff = (revenue_perfect - benefit_revenue) / revenue_perfect)
test5 = test4 %>%
dplyr::filter(revenue_pct_diff > 0.1)
test5
unique(test5$Bus)
bus_label_tbl
bus_13366 %>% arrange(Bus) %>% print(n = 100)
bus_label_tbl %>% arrange(Bus) %>% print(n = 100)
test5
ex_rev = test %>%
dplyr::filter(eia_plant_id == 3077, year == 2007, month == 11)
ex_rev
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast))
bus_label_tbl
bus_label_tbl %>% print(n = 100)
test5
test5 %>% filter(Bus == 'test5')
test5 %>% filter(Bus == 'bus_23060')
test5 %>% filter(Bus == 'bus_23060') %>% print(n = 300)
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2005, month == 9)
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2005, month == 9)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast, linetype = eia_plant_id))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast,
linetype = as.factor(eia_plant_id)))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~eia_plant_id, scales = 'free')
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~eia_plant_id, scales = 'free_x')
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2005) #, month == 9)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~eia_plant_id, scales = 'free_x')
dp_dat_rev_bus_box
dp_dat_rev_bus_box %>% arrange(-revenue_pct_label)
dp_dat_rev_bus_box %>% arrange(revenue_pct_label)
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2006) #, month == 9)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~eia_plant_id, scales = 'free_x')
bus_label_tbl
go_nodes_100_hydro_tbl
hydro_node_tbl
hydro_node_tbl
hydro_node_tbl_jn = hydro_node_tbl %>%
dplyr::select(EIA_ID, plant, state, capacity) %>%
dplyr::rename(eia_plant_id = EIA_ID) %>%
mutate(plant_label = paste0(plant, ' [', capacity, 'MW]'))
hydro_node_tbl_jn
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2006) #, month == 9) %>%
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x')
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2006) %>% #, month == 9) %>%
left_join(hydro_node_tbl_jn)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x')
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2011) %>% #, month == 9) %>%
left_join(hydro_node_tbl_jn)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x')
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', year == 2006) %>% #, month == 9) %>%
left_join(hydro_node_tbl_jn)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x')
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660')) +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
strip.background = element_rect(fill = NA)
) +
guides(size = 'none',
linetype = 'none',
fill = guide_colorbar(barwidth = 20, barheight = 1, title.position = 'bottom',
title.hjust = 0.5))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660')) +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
guides(size = 'none',
linetype = 'none',
fill = guide_colorbar(barwidth = 20, barheight = 1, title.position = 'bottom',
title.hjust = 0.5))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
guides(fill = guide_colorbar(barwidth = 20, barheight = 1, title.position = 'bottom',
title.hjust = 0.5))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
ggtitle('Hayfork 1 1 Bus')
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
ggtitle('Hayfork 1 1 Bus')
ex_rev
ex_rev_tot = ex_rev %>%
group_by(week_commencing, forecast) %>%
dplyr::summarise(benefit_revenue = sum(benefit_revenue))
ggplot() +
geom_line(data = ex_rev_tot, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
)
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x') +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
guides(color = 'none') +
ggtitle('Hayfork 1 1 Bus')
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x', ncol = 4) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
guides(color = 'none') +
ggtitle('Hayfork 1 1 Bus')
library(patchwork)
p1 <- ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x', ncol = 4) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
strip.background = element_rect(fill = NA)) +
guides(color = 'none') +
ggtitle('Hayfork 1 1 Bus')
p2 <- ggplot() +
geom_line(data = ex_rev_tot, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
strip.background = element_rect(fill = NA))
# Combine the two plots
combined_plot <- (p1 / p2) +
plot_layout(heights = c(3, 1))  # Adjust the height of the second plot
# Print the combined plot
print(combined_plot)
# Combine the two plots
combined_plot <- (p1 / p2) +
plot_layout(heights = c(4, 1))  # Adjust the height of the second plot
# Print the combined plot
print(combined_plot)
# Combine the two plots
combined_plot <- (p1 / p2) +
plot_layout(heights = c(2, 1))  # Adjust the height of the second plot
# Print the combined plot
print(combined_plot)
# Combine the two plots
combined_plot <- (p1 / p2) +
plot_layout(heights = c(4, 1))  # Adjust the height of the second plot
# Print the combined plot
print(combined_plot)
ggsave('figures/test_ts.png', height = 10, width = 10)
dp_dat_stat
# add year and month columns
test = dp_dat_stat %>%
mutate(wyear = wyear(week_commencing), month = month(week_commencing)) %>%
dplyr::rename(eia_plant_id = EIA_ID) %>%
left_join(hydro_plant_tbl_fl)
# add year and month columns
test = dp_dat_stat %>%
mutate(wyear = water_year(week_commencing), month = month(week_commencing)) %>%
dplyr::rename(eia_plant_id = EIA_ID) %>%
left_join(hydro_plant_tbl_fl)
# add year and month columns
test = dp_dat_stat %>%
mutate(wyear = water_year(week_commencing), month = month(week_commencing)) %>%
dplyr::rename(eia_plant_id = EIA_ID) %>%
left_join(hydro_plant_tbl_fl)
# compute monthly revenue and look for months with large revenue losses +/-
test2 = test %>%
group_by(Bus, eia_plant_id, forecast, wyear, month) %>%
dplyr::summarise(benefit_revenue = sum(benefit_revenue))
# pull out perfect forecast as comparison
test3 = test2 %>%
ungroup() %>%
dplyr::filter(forecast == 'perfect') %>%
dplyr::rename(revenue_perfect = benefit_revenue) %>%
dplyr::select(-forecast)
test4 = test2 %>%
left_join(test3) %>%
mutate(revenue_pct_diff = (revenue_perfect - benefit_revenue) / revenue_perfect)
test5 = test4 %>%
dplyr::filter(revenue_pct_diff > 0.1)
hydro_node_tbl_jn = hydro_node_tbl %>%
dplyr::select(EIA_ID, plant, state, capacity) %>%
dplyr::rename(eia_plant_id = EIA_ID) %>%
mutate(plant_label = paste0(plant, ' [', capacity, 'MW]'))
ex_rev = test %>%
dplyr::filter(Bus == 'bus_23060', wyear == 2006) %>% #, month == 9) %>%
left_join(hydro_node_tbl_jn)
ex_rev_tot = ex_rev %>%
group_by(week_commencing, forecast) %>%
dplyr::summarise(benefit_revenue = sum(benefit_revenue))
ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x', ncol = 4) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
) +
guides(color = 'none') +
ggtitle('Hayfork 1 1 Bus')
ggplot() +
geom_line(data = ex_rev_tot, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.background = element_rect(fill = NA)
)
library(ggplot2)
library(patchwork)
p1 <- ggplot() +
geom_line(data = ex_rev, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
facet_wrap(~plant_label, scales = 'free_x', ncol = 4) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
strip.background = element_rect(fill = NA)) +
guides(color = 'none') +
ggtitle('Hayfork 1 1 Bus')
p2 <- ggplot() +
geom_line(data = ex_rev_tot, aes(x = week_commencing, y = benefit_revenue, color = forecast)) +
scale_color_manual(values = c('#648FFF', '#FFB000', '#DC2660'), name = '') +
theme_bw() +
xlab('') +
ylab('Revenue (dollars)') +
theme(legend.position = 'bottom',
text = element_text(family = 'Lato', size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
strip.background = element_rect(fill = NA))
# Combine the two plots
combined_plot <- (p1 / p2) +
plot_layout(heights = c(4, 1))  # Adjust the height of the second plot
# Print the combined plot
print(combined_plot)
ggsave('figures/test_ts.png', height = 10, width = 10)
dp_dat_rev_bus_box %>% arrange(revenue_pct_label) %>%
filter(wyear == 2006, Bus == 'bus_23060')
